# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-11-14 17:01
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'managed': False,
                'db_table': 'auth_group',
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'auth_group_permissions',
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('codename', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'managed': False,
                'db_table': 'auth_permission',
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
                ('username', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'managed': False,
                'db_table': 'auth_user',
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'auth_user_groups',
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
                'db_table': 'auth_user_user_permissions',
            },
        ),
        migrations.CreateModel(
            name='Data111',
            fields=[
                ('id', models.IntegerField(blank=True, primary_key=True, serialize=False, unique=True)),
                ('наименование', models.TextField(blank=True, db_column='НАИМЕНОВАНИЕ', null=True)),
                ('инн', models.TextField(blank=True, db_column='ИНН', null=True)),
                ('огрн', models.TextField(blank=True, db_column='ОГРН', null=True)),
                ('дата_регистрации', models.TextField(blank=True, db_column='ДАТА РЕГИСТРАЦИИ', null=True)),
                ('опф', models.TextField(blank=True, db_column='ОПФ', null=True)),
                ('код_эмитента', models.TextField(blank=True, db_column='Код эмитента', null=True)),
                ('уставной_капитал', models.TextField(blank=True, db_column='УСТАВНОЙ КАПИТАЛ', null=True)),
                ('количество_лицевых_счетов_в_реестре', models.TextField(blank=True, db_column='Количество лицевых счетов в реестре', null=True)),
                ('количество_номинальных_держателей_в_реестре', models.TextField(blank=True, db_column='Количество номинальных держателей в реестре', null=True)),
                ('сведения_об_открытии_счета_номинального_держателя_центрального_депозитария', models.TextField(blank=True, db_column='Сведения об открытии счета номинального держателя центрального депозитария', null=True)),
                ('регион', models.TextField(blank=True, db_column='РЕГИОН', null=True)),
                ('адрес', models.TextField(blank=True, db_column='АДРЕС', null=True)),
                ('единоличный_исполнительный_орган', models.TextField(blank=True, db_column='ЕДИНОЛИЧНЫЙ ИСПОЛНИТЕЛЬНЫЙ ОРГАН', null=True)),
                ('контактные_данные', models.TextField(blank=True, db_column='КОНТАКТНЫЕ ДАННЫЕ', null=True)),
                ('статус', models.TextField(blank=True, db_column='СТАТУС', null=True)),
                ('движение_денежных_средств', models.TextField(blank=True, db_column='ДВИЖЕНИЕ ДЕНЕЖНЫХ СРЕДСТВ', null=True)),
                ('отчетность', models.TextField(blank=True, db_column='ОТЧЕТНОСТЬ', null=True)),
                ('задолженность_перед_фнс', models.TextField(blank=True, db_column='ЗАДОЛЖЕННОСТЬ ПЕРЕД ФНС', null=True)),
                ('карточка_компании', models.TextField(blank=True, db_column='КАРТОЧКА КОМПАНИИ', null=True)),
                ('регистратор', models.TextField(blank=True, db_column='РЕГИСТРАТОР', null=True)),
                ('дата_письма_по_реестру', models.TextField(blank=True, db_column='ДАТА ПИСЬМА ПО РЕЕСТРУ', null=True)),
                ('номер_письма_по_реестру', models.TextField(blank=True, db_column='НОМЕР ПИСЬМА ПО РЕЕСТРУ', null=True)),
                ('дата_запроса_по_реестру', models.TextField(blank=True, db_column='ДАТА ЗАПРОСА ПО РЕЕСТРУ', null=True)),
                ('номер_запроса_по_реестру', models.TextField(blank=True, db_column='НОМЕР ЗАПРОСА ПО РЕЕСТРУ', null=True)),
                ('дата_предписания_по_реестру', models.TextField(blank=True, db_column='ДАТА ПРЕДПИСАНИЯ ПО РЕЕСТРУ', null=True)),
                ('номер_предписания_по_реестру', models.TextField(blank=True, db_column='НОМЕР ПРЕДПИСАНИЯ ПО РЕЕСТРУ', null=True)),
                ('дата_проведения_госа', models.TextField(blank=True, db_column='ДАТА ПРОВЕДЕНИЯ ГОСА', null=True)),
                ('дата_запроса_по_госа', models.TextField(blank=True, db_column='ДАТА ЗАПРОСА ПО ГОСА', null=True)),
                ('номер_запроса_по_госа', models.TextField(blank=True, db_column='НОМЕР ЗАПРОСА ПО ГОСА', null=True)),
                ('дата_предписания_по_1_выпуску', models.TextField(blank=True, db_column='ДАТА ПРЕДПИСАНИЯ ПО 1 ВЫПУСКУ', null=True)),
                ('номер_предписания_по_1_выпуску', models.TextField(blank=True, db_column='НОМЕР ПРЕДПИСАНИЯ ПО 1 ВЫПУСКУ', null=True)),
                ('нрд', models.TextField(blank=True, db_column='НРД', null=True)),
                ('оао_на_22_06_2015', models.TextField(blank=True, db_column='ОАО на 22.06.2015', null=True)),
                ('корп_контроль', models.TextField(blank=True, db_column='КОРП КОНТРОЛЬ', null=True)),
                ('пао_в_силу_признаков', models.TextField(blank=True, db_column='ПАО В СИЛУ ПРИЗНАКОВ', null=True)),
                ('пао_в_силу_названия', models.TextField(blank=True, db_column='ПАО В СИЛУ НАЗВАНИЯ', null=True)),
                ('нао_обязанное_раскрывать_информацию_в_соответствии_со_ст_30_фз_о_рцб', models.TextField(blank=True, db_column='НАО ОБЯЗАННОЕ РАСКРЫВАТЬ ИНФОРМАЦИЮ В СООТВЕТСТВИИ СО СТ.30 ФЗ О РЦБ', null=True)),
                ('нао_осуществившее_осуществляющее_публичное_размещение_облигаций_или_иных_ценных_бумаг_field', models.TextField(blank=True, db_column='НАО ОСУЩЕСТВИВШЕЕ (ОСУЩЕСТВЛЯЮЩЕЕ) ПУБЛИЧНОЕ РАЗМЕЩЕНИЕ ОБЛИГАЦИЙ ИЛИ ИНЫХ ЦЕННЫХ БУМАГ ', null=True)),
                ('нао', models.TextField(blank=True, db_column='НАО', null=True)),
                ('освобождены_от_раскрытия', models.TextField(blank=True, db_column='ОСВОБОЖДЕНЫ ОТ РАСКРЫТИЯ', null=True)),
                ('дата_решения_об_освобождении', models.TextField(blank=True, db_column='ДАТА РЕШЕНИЯ ОБ ОСВОБОЖДЕНИИ', null=True)),
                ('номер_решения_об_освобождении', models.TextField(blank=True, db_column='НОМЕР РЕШЕНИЯ ОБ ОСВОБОЖДЕНИИ', null=True)),
                ('отказ_в_освобождении_от_раскрытия', models.TextField(blank=True, db_column='ОТКАЗ В ОСВОБОЖДЕНИИ ОТ РАСКРЫТИЯ', null=True)),
                ('дата_отказа_в_освобождении_от_раскрытия', models.TextField(blank=True, db_column='ДАТА ОТКАЗА В ОСВОБОЖДЕНИИ ОТ РАСКРЫТИЯ', null=True)),
                ('номер_отказа_в_освобождении_от_раскрытия', models.TextField(blank=True, db_column='НОМЕР ОТКАЗА В ОСВОБОЖДЕНИИ ОТ РАСКРЫТИЯ', null=True)),
                ('проверка_раскрытия', models.TextField(blank=True, db_column='ПРОВЕРКА РАСКРЫТИЯ', null=True)),
                ('дата_проверки', models.TextField(blank=True, db_column='ДАТА ПРОВЕРКИ', null=True)),
                ('дата_запроса_по_нераскрытию_информации', models.TextField(blank=True, db_column='ДАТА ЗАПРОСА ПО НЕРАСКРЫТИЮ ИНФОРМАЦИИ', null=True)),
                ('номер_запроса_по_нераскрытию_информации', models.TextField(blank=True, db_column='НОМЕР ЗАПРОСА ПО НЕРАСКРЫТИЮ ИНФОРМАЦИИ', null=True)),
                ('дата_предписания_по_нераскрытию_информации', models.TextField(blank=True, db_column='ДАТА ПРЕДПИСАНИЯ ПО НЕРАСКРЫТИЮ ИНФОРМАЦИИ', null=True)),
                ('номер_предписания_по_нераскрытию_информации', models.TextField(blank=True, db_column='НОМЕР ПРЕДПИСАНИЯ ПО НЕРАСКРЫТИЮ ИНФОРМАЦИИ', null=True)),
                ('дата_запроса_орезультатах_проведения_торгов_в_обществе', models.TextField(blank=True, db_column='ДАТА ЗАПРОСА ОРЕЗУЛЬТАТАХ ПРОВЕДЕНИЯ ТОРГОВ В ОБЩЕСТВЕ', null=True)),
                ('номер_запроса_о_результатах_проведения_торгов_в_обществе', models.TextField(blank=True, db_column='НОМЕР ЗАПРОСА О РЕЗУЛЬТАТАХ ПРОВЕДЕНИЯ ТОРГОВ В ОБЩЕСТВЕ', null=True)),
                ('дата_ответа_на_запроса_о_результатах_проведения_торгов_в_обществе', models.TextField(blank=True, db_column='ДАТА ОТВЕТА НА ЗАПРОСА О РЕЗУЛЬТАТАХ ПРОВЕДЕНИЯ ТОРГОВ В ОБЩЕСТВЕ', null=True)),
                ('номер_ответа_на_запроса_о_результатах_проведения_торгов_в_обществе', models.TextField(blank=True, db_column='НОМЕР ОТВЕТА НА ЗАПРОСА О РЕЗУЛЬТАТАХ ПРОВЕДЕНИЯ ТОРГОВ В ОБЩЕСТВЕ', null=True)),
                ('вывод', models.TextField(blank=True, db_column='ВЫВОД', null=True)),
                ('раскрытие', models.TextField(blank=True, db_column='РАСКРЫТИЕ', null=True)),
                ('дата_протокола', models.TextField(blank=True, db_column='ДАТА ПРОТОКОЛА', null=True)),
                ('номер_протокола', models.TextField(blank=True, db_column='НОМЕР ПРОТОКОЛА', null=True)),
                ('статья_коап', models.TextField(blank=True, db_column='СТАТЬЯ КОАП', null=True)),
                ('дата_постановления', models.TextField(blank=True, db_column='ДАТА ПОСТАНОВЛЕНИЯ', null=True)),
                ('номер_постановления', models.TextField(blank=True, db_column='НОМЕР ПОСТАНОВЛЕНИЯ', null=True)),
                ('результат', models.TextField(blank=True, db_column='РЕЗУЛЬТАТ', null=True)),
                ('размер_штрафа', models.TextField(blank=True, db_column='РАЗМЕР ШТРАФА', null=True)),
                ('административка', models.TextField(blank=True, db_column='АДМИНИСТРАТИВКА', null=True)),
                ('фнс', models.TextField(blank=True, db_column='ФНС', null=True)),
                ('дата_письма_в_фнс', models.TextField(blank=True, db_column='ДАТА ПИСЬМА В ФНС', null=True)),
                ('номер_письма_в_фнс', models.TextField(blank=True, db_column='НОМЕР ПИСЬМА В ФНС', null=True)),
                ('информация_о_получении_ответа_от_фнс', models.TextField(blank=True, db_column='ИНФОРМАЦИЯ О ПОЛУЧЕНИИ ОТВЕТА ОТ ФНС', null=True)),
                ('вх_номер_ответа', models.TextField(blank=True, db_column='ВХ. НОМЕР ОТВЕТА', null=True)),
                ('сведения_об_адресе_не_достоверны', models.TextField(blank=True, db_column='СВЕДЕНИЯ ОБ АДРЕСЕ НЕ ДОСТОВЕРНЫ', null=True)),
                ('дата_внесения_записи', models.TextField(blank=True, db_column='ДАТА ВНЕСЕНИЯ ЗАПИСИ', null=True)),
                ('взаимодействие_с_гос_органами', models.TextField(blank=True, db_column='ВЗАИМОДЕЙСТВИЕ С ГОС. ОРГАНАМИ', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'data111',
            },
        ),
        migrations.CreateModel(
            name='Data222',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('наименование', models.TextField(blank=True, db_column='НАИМЕНОВАНИЕ', null=True)),
                ('инн', models.TextField(blank=True, db_column='ИНН', null=True)),
                ('огрн', models.TextField(blank=True, db_column='ОГРН', null=True)),
                ('дата_регистрации', models.TextField(blank=True, db_column='ДАТА РЕГИСТРАЦИИ', null=True)),
                ('опф', models.TextField(blank=True, db_column='ОПФ', null=True)),
                ('код_эмитента', models.TextField(blank=True, db_column='КОД ЭМИТЕНТА', null=True)),
                ('уставной_капитал', models.TextField(blank=True, db_column='УСТАВНОЙ КАПИТАЛ', null=True)),
                ('количество_лицевых_счетов_в_реестре', models.TextField(blank=True, db_column='Количество лицевых счетов в реестре', null=True)),
                ('количество_номинальных_держателей_в_реестре', models.TextField(blank=True, db_column='Количество номинальных держателей в реестре', null=True)),
                ('сведения_об_открытии_счета_номинального_держателя_центрального_депозитария', models.TextField(blank=True, db_column='Сведения об открытии счета номинального держателя центрального депозитария', null=True)),
                ('регион', models.TextField(blank=True, db_column='РЕГИОН', null=True)),
                ('адрес', models.TextField(blank=True, db_column='АДРЕС', null=True)),
                ('единоличный_исполнительный_орган', models.TextField(blank=True, db_column='ЕДИНОЛИЧНЫЙ ИСПОЛНИТЕЛЬНЫЙ ОРГАН', null=True)),
                ('контактные_данные', models.TextField(blank=True, db_column='КОНТАКТНЫЕ ДАННЫЕ', null=True)),
                ('статус', models.TextField(blank=True, db_column='СТАТУС', null=True)),
                ('движение_денежных_средств', models.TextField(blank=True, db_column='ДВИЖЕНИЕ ДЕНЕЖНЫХ СРЕДСТВ', null=True)),
                ('отчетность', models.TextField(blank=True, db_column='ОТЧЕТНОСТЬ', null=True)),
                ('задолженность_перед_фнс', models.TextField(blank=True, db_column='ЗАДОЛЖЕННОСТЬ ПЕРЕД ФНС', null=True)),
                ('карточка_компании', models.TextField(blank=True, db_column='КАРТОЧКА КОМПАНИИ', null=True)),
                ('регистратор', models.TextField(blank=True, db_column='РЕГИСТРАТОР', null=True)),
                ('дата_письма_по_реестру', models.TextField(blank=True, db_column='ДАТА ПИСЬМА ПО РЕЕСТРУ', null=True)),
                ('номер_письма_по_реестру', models.TextField(blank=True, db_column='НОМЕР ПИСЬМА ПО РЕЕСТРУ', null=True)),
                ('дата_запроса_по_реестру', models.TextField(blank=True, db_column='ДАТА ЗАПРОСА ПО РЕЕСТРУ', null=True)),
                ('номер_запроса_по_реестру', models.TextField(blank=True, db_column='НОМЕР ЗАПРОСА ПО РЕЕСТРУ', null=True)),
                ('дата_предписания_по_реестру', models.TextField(blank=True, db_column='ДАТА ПРЕДПИСАНИЯ ПО РЕЕСТРУ', null=True)),
                ('номер_предписания_по_реестру', models.TextField(blank=True, db_column='НОМЕР ПРЕДПИСАНИЯ ПО РЕЕСТРУ', null=True)),
                ('дата_проведения_госа', models.TextField(blank=True, db_column='ДАТА ПРОВЕДЕНИЯ ГОСА', null=True)),
                ('дата_запроса_по_госа', models.TextField(blank=True, db_column='ДАТА ЗАПРОСА ПО ГОСА', null=True)),
                ('номер_запроса_по_госа', models.TextField(blank=True, db_column='НОМЕР ЗАПРОСА ПО ГОСА', null=True)),
                ('дата_предписания_по_1_выпуску', models.TextField(blank=True, db_column='ДАТА ПРЕДПИСАНИЯ ПО 1 ВЫПУСКУ', null=True)),
                ('номер_предписания_по_1_выпуску', models.TextField(blank=True, db_column='НОМЕР ПРЕДПИСАНИЯ ПО 1 ВЫПУСКУ', null=True)),
                ('нрд', models.TextField(blank=True, db_column='НРД', null=True)),
                ('оао_на_22_06_2015', models.TextField(blank=True, db_column='ОАО на 22.06.2015', null=True)),
                ('корп_контроль', models.TextField(blank=True, db_column='КОРП КОНТРОЛЬ', null=True)),
                ('пао_в_силу_признаков', models.TextField(blank=True, db_column='ПАО В СИЛУ ПРИЗНАКОВ', null=True)),
                ('пао_в_силу_названия', models.TextField(blank=True, db_column='ПАО В СИЛУ НАЗВАНИЯ', null=True)),
                ('нао_обязанное_раскрывать_информацию_в_соответствии_сост_30_фз_о_рцб', models.TextField(blank=True, db_column='НАО ОБЯЗАННОЕ РАСКРЫВАТЬ ИНФОРМАЦИЮ В СООТВЕТСТВИИ СОСТ.30 ФЗ О РЦБ', null=True)),
                ('нао_осуществившее_осуществляющее_публичное_размещение_облигаций_или_иных_ценных_бумаг_field', models.TextField(blank=True, db_column='НАО ОСУЩЕСТВИВШЕЕ (ОСУЩЕСТВЛЯЮЩЕЕ) ПУБЛИЧНОЕ РАЗМЕЩЕНИЕ ОБЛИГАЦИЙ ИЛИ ИНЫХ ЦЕННЫХ БУМАГ ', null=True)),
                ('нао', models.TextField(blank=True, db_column='НАО', null=True)),
                ('освобождены_от_раскрытия', models.TextField(blank=True, db_column='ОСВОБОЖДЕНЫ ОТ РАСКРЫТИЯ', null=True)),
                ('дата_решения_об_освобождении', models.TextField(blank=True, db_column='ДАТА РЕШЕНИЯ ОБ ОСВОБОЖДЕНИИ', null=True)),
                ('номер_решения_об_освобождении', models.TextField(blank=True, db_column='НОМЕР РЕШЕНИЯ ОБ ОСВОБОЖДЕНИИ', null=True)),
                ('отказ_в_освобождении_от_раскрытия', models.TextField(blank=True, db_column='ОТКАЗ В ОСВОБОЖДЕНИИ ОТ РАСКРЫТИЯ', null=True)),
                ('дата_отказа_в_освобождении_от_раскрытия', models.TextField(blank=True, db_column='ДАТА ОТКАЗА В ОСВОБОЖДЕНИИ ОТ РАСКРЫТИЯ', null=True)),
                ('номер_отказа_в_освобождении_от_раскрытия', models.TextField(blank=True, db_column='НОМЕР ОТКАЗА В ОСВОБОЖДЕНИИ ОТ РАСКРЫТИЯ', null=True)),
                ('проверка_раскрытия', models.TextField(blank=True, db_column='ПРОВЕРКА РАСКРЫТИЯ', null=True)),
                ('дата_проверки', models.TextField(blank=True, db_column='ДАТА ПРОВЕРКИ', null=True)),
                ('дата_запроса_по_нераскрытию_информации', models.TextField(blank=True, db_column='ДАТА ЗАПРОСА ПО НЕРАСКРЫТИЮ ИНФОРМАЦИИ', null=True)),
                ('номер_запроса_по_нераскрытию_информации', models.TextField(blank=True, db_column='НОМЕР ЗАПРОСА ПО НЕРАСКРЫТИЮ ИНФОРМАЦИИ', null=True)),
                ('дата_предписания_по_нераскрытию_информации', models.TextField(blank=True, db_column='ДАТА ПРЕДПИСАНИЯ ПО НЕРАСКРЫТИЮ ИНФОРМАЦИИ', null=True)),
                ('номер_предписания_по_нераскрытию_информации', models.TextField(blank=True, db_column='НОМЕР ПРЕДПИСАНИЯ ПО НЕРАСКРЫТИЮ ИНФОРМАЦИИ', null=True)),
                ('дата_запроса_о_результатах_проведения_торгов_в_обществе', models.TextField(blank=True, db_column='ДАТА ЗАПРОСА О РЕЗУЛЬТАТАХ ПРОВЕДЕНИЯ ТОРГОВ В ОБЩЕСТВЕ', null=True)),
                ('номер_запроса_о_результатах_проведения_торгов_в_обществе', models.TextField(blank=True, db_column='НОМЕР ЗАПРОСА О РЕЗУЛЬТАТАХ ПРОВЕДЕНИЯ ТОРГОВ В ОБЩЕСТВЕ', null=True)),
                ('дата_ответа_на_запроса_о_результатах_проведения_торгов_в_обществе', models.TextField(blank=True, db_column='ДАТА ОТВЕТА НА ЗАПРОСА О РЕЗУЛЬТАТАХ ПРОВЕДЕНИЯ ТОРГОВ В ОБЩЕСТВЕ', null=True)),
                ('номер_ответа_на_запроса_о_результатах_проведения_торгов_в_обществе', models.TextField(blank=True, db_column='НОМЕР ОТВЕТА НА ЗАПРОСА О РЕЗУЛЬТАТАХ ПРОВЕДЕНИЯ ТОРГОВ В ОБЩЕСТВЕ', null=True)),
                ('вывод', models.TextField(blank=True, db_column='ВЫВОД', null=True)),
                ('раскрытие', models.TextField(blank=True, db_column='РАСКРЫТИЕ', null=True)),
                ('дата_протокола', models.TextField(blank=True, db_column='ДАТА ПРОТОКОЛА', null=True)),
                ('номер_протокола', models.TextField(blank=True, db_column='НОМЕР ПРОТОКОЛА', null=True)),
                ('статья_коап', models.TextField(blank=True, db_column='СТАТЬЯ КОАП', null=True)),
                ('дата_постановления', models.TextField(blank=True, db_column='ДАТА ПОСТАНОВЛЕНИЯ', null=True)),
                ('номер_постановления', models.TextField(blank=True, db_column='НОМЕР ПОСТАНОВЛЕНИЯ', null=True)),
                ('результат', models.TextField(blank=True, db_column='РЕЗУЛЬТАТ', null=True)),
                ('размер_штрафа', models.TextField(blank=True, db_column='РАЗМЕР ШТРАФА', null=True)),
                ('административка', models.TextField(blank=True, db_column='АДМИНИСТРАТИВКА', null=True)),
                ('фнс', models.TextField(blank=True, db_column='ФНС', null=True)),
                ('дата_письма_в_фнс', models.TextField(blank=True, db_column='ДАТА ПИСЬМА В ФНС', null=True)),
                ('номер_письма_в_фнс', models.TextField(blank=True, db_column='НОМЕР ПИСЬМА В ФНС', null=True)),
                ('информация_о_получении_ответа_от_фнс', models.TextField(blank=True, db_column='ИНФОРМАЦИЯ О ПОЛУЧЕНИИ ОТВЕТА ОТ ФНС', null=True)),
                ('вх_номер_ответа', models.TextField(blank=True, db_column='ВХ. НОМЕР ОТВЕТА', null=True)),
                ('сведения_об_адресе_не_достоверны', models.TextField(blank=True, db_column='СВЕДЕНИЯ ОБ АДРЕСЕ НЕ ДОСТОВЕРНЫ', null=True)),
                ('дата_внесения_записи', models.TextField(blank=True, db_column='ДАТА ВНЕСЕНИЯ ЗАПИСИ', null=True)),
                ('взаимодействие_с_гос_органами', models.TextField(blank=True, db_column='ВЗАИМОДЕЙСТВИЕ С ГОС. ОРГАНАМИ', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'data222',
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
                ('action_time', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'django_admin_log',
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'django_content_type',
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'django_migrations',
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'django_session',
            },
        ),
    ]
