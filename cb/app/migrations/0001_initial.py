# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2018-01-29 14:36
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('codename', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
                ('username', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Data111',
            fields=[
                ('id', models.IntegerField(blank=True, primary_key=True, serialize=False, unique=True)),
                ('naimenovanie', models.CharField(blank=True, db_column='НАИМЕНОВАНИЕ', default=None, max_length=1000, null=True)),
                ('inn', models.CharField(blank=True, db_column='ИНН', default=None, max_length=1000, null=True)),
                ('ogrn', models.CharField(blank=True, db_column='ОГРН', default=None, max_length=1000, null=True)),
                ('kpp', models.CharField(blank=True, db_column='КПП', max_length=1000, null=True)),
                ('data_registracii', models.CharField(blank=True, db_column='ДАТА РЕГИСТРАЦИИ', default=None, max_length=1000, null=True)),
                ('opf', models.CharField(blank=True, db_column='ОПФ', default=None, max_length=1000, null=True)),
                ('cod_emitenta', models.CharField(blank=True, db_column='КОД ЭМИТEHТA', default=None, max_length=1000, null=True)),
                ('ustavnoy_capital', models.CharField(blank=True, db_column='УСТАВНЫЙ КАПИТАЛ', default=None, max_length=1000, null=True)),
                ('kolichestvo_licevyh_schetov_v_reestre', models.CharField(blank=True, db_column='Количество лицевых счетов в реестре', default=None, max_length=1000, null=True)),
                ('kolichestvo_nominalnyh_derzhateley_v_reestre', models.CharField(blank=True, db_column='Количество номинальных держателей в реестре', default=None, max_length=1000, null=True)),
                ('cvedeniya_ob_otritii_scheta_nominalnogo_derzhatelya_centralnogo_depozitoria', models.CharField(blank=True, db_column='Сведения об открытии счета номинального держателя центрального депозитария', default=None, max_length=1000, null=True)),
                ('region', models.CharField(blank=True, db_column='РЕГИОН', default=None, max_length=1000, null=True)),
                ('adres', models.CharField(blank=True, db_column='АДРЕС', default=None, max_length=1000, null=True)),
                ('edinolichny_ispolnitelny_organ', models.CharField(blank=True, db_column='ЕДИНОЛИЧНЫЙ ИСПОЛНИТЕЛЬНЫЙ ОРГАН', default=None, max_length=1000, null=True)),
                ('contactny_dannye', models.CharField(blank=True, db_column='КОНТАКТНЫЕ ДАННЫЕ', default=None, max_length=1000, null=True)),
                ('status', models.CharField(blank=True, db_column='СТАТУС', default=None, max_length=1000, null=True)),
                ('dvizhenie_denezhnyh_sredstv', models.CharField(blank=True, db_column='ДВИЖЕНИЕ ДЕНЕЖНЫХ СРЕДСТВ', default=None, max_length=1000, null=True)),
                ('data_posledney_operacii', models.CharField(blank=True, db_column='ДАТА ПОСЛЕДНЕЙ ОПЕРАЦИИ', max_length=1000, null=True)),
                ('otchetnost', models.CharField(blank=True, db_column='ОТЧЕТНОСТЬ', default=None, max_length=1000, null=True)),
                ('zadolzhennost_pered_fns', models.CharField(blank=True, db_column='ЗАДОЛЖЕННОСТЬ ПЕРЕД ФНС', default=None, max_length=1000, null=True)),
                ('kartochka_kompanii', models.CharField(blank=True, db_column='КАРТОЧКА КОМПАНИИ', default=None, max_length=1000, null=True)),
                ('registrator1', models.CharField(db_column='РЕГИСТРАТОР1', default='ДА', max_length=20)),
                ('registrator', models.CharField(blank=True, db_column='РЕГИСТРАТОР', max_length=20)),
                ('netsami', models.CharField(blank=True, default='---', max_length=1000)),
                ('naimenovanie_registratora', models.CharField(blank=True, db_column='НАИМЕНОВАНИЕ РЕГИСТРАТОРА', max_length=1000, null=True)),
                ('data_pisma_po_reestru', models.CharField(blank=True, db_column='ДАТА ПИСЬМА ПО РЕЕСТРУ', max_length=1000, null=True)),
                ('nomer_pisma_po_reestru', models.CharField(blank=True, db_column='НОМЕР ПИСЬМА ПО РЕЕСТРУ', max_length=1000, null=True)),
                ('data_zaprosa_po_reestru', models.CharField(blank=True, db_column='ДАТА ЗАПРОСА ПО РЕЕСТРУ', max_length=1000, null=True)),
                ('nomer_zaprosa_po_reestru', models.CharField(blank=True, db_column='НОМЕР ЗАПРОСА ПО РЕЕСТРУ', max_length=1000, null=True)),
                ('data_predpisanya_po_reestru', models.CharField(blank=True, db_column='ДАТА ПРЕДПИСАНИЯ ПО РЕЕСТРУ', max_length=1000, null=True)),
                ('nomer_predpisaniya_po_reestru', models.CharField(blank=True, db_column='НОМЕР ПРЕДПИСАНИЯ ПО РЕЕСТРУ', max_length=1000, null=True)),
                ('proverky_gosa_po_raskritiyu', models.CharField(blank=True, db_column='ПРОВЕРКИ ГОСА ПО РАСКРЫТИЮ', max_length=1000, null=True)),
                ('proverky_gosa_po_zaprosu', models.CharField(blank=True, db_column='ПРОВЕРКИ ГОСА ПО ЗАПРОСУ', max_length=1000, null=True)),
                ('data_provedeniya_gosa', models.CharField(blank=True, db_column='ДАТА ПРОВЕДЕНИЯ ГОСА', max_length=1000, null=True)),
                ('data_zaprosa_po_gosa', models.CharField(blank=True, db_column='ДАТА ЗАПРОСА ПО ГОСА', max_length=1000, null=True)),
                ('nomer_zaprosa_po_gosa', models.CharField(blank=True, db_column='НОМЕР ЗАПРОСА ПО ГОСА', max_length=1000, null=True)),
                ('proverka_1_vipusk', models.CharField(blank=True, db_column='ПРОВЕРКА 1 ВЫПУСК', max_length=1000, null=True)),
                ('data_predpisaniya_po_1_vypusku', models.CharField(blank=True, db_column='ДАТА ПРЕДПИСАНИЯ ПО 1 ВЫПУСКУ', max_length=1000, null=True)),
                ('nomer_predpisaniya_po_1_vypusku', models.CharField(blank=True, db_column='НОМЕР ПРЕДПИСАНИЯ ПО 1 ВЫПУСКУ', max_length=1000, null=True)),
                ('nrd', models.CharField(blank=True, db_column='НРД', max_length=1000, null=True)),
                ('proverki_nrd', models.CharField(blank=True, db_column='ПРОВЕРКИ НРД', max_length=1000, null=True)),
                ('oao_na_22_06_2015', models.CharField(blank=True, db_column='ОАО эр 22.06.2015', max_length=1000, null=True)),
                ('korp_kontrol', models.CharField(blank=True, db_column='КОРП КОНТРОЛЬ', max_length=1000, null=True)),
                ('pao_v_silu_priznakov_st30', models.CharField(blank=True, db_column='ПАО В СИЛУ ПРИЗНАКОВ СТ.30', max_length=1000, null=True)),
                ('pao_v_silu_nazvaniya', models.CharField(blank=True, db_column='ПАО В СИЛУ НАЗВАНИЯ', max_length=1000, null=True)),
                ('nao_obyazannoe_raskryvat_informaciyu_v_sootvetstvii_so_st_30_fz_o_pcb', models.CharField(blank=True, db_column='НАО ОБЯЗАННОЕ РАСКРЫВАТЬ ИНФОРМАЦИЮ В СООТВЕТСТВИИ СО СТ. 30 ФЗ О РЦБ', max_length=1000, null=True)),
                ('nao_osuchestvivshee_osuchestvlyayuschee_publichnoe_razmechenie_obligaciy_ili_inyh_cennyh_bumag', models.CharField(blank=True, db_column='НАО ОСУЩЕСТВИВШЕЕ (ОСУЩЕСТВЛЯЮЩЕЕ) ПУБЛИЧНОЕ РАЗМЕЩЕНИЕ ОБЛИГАЦИЙ ИЛИ ИНЫХ ЦЕННЫХ БУМАГ', max_length=1000, null=True)),
                ('nao', models.CharField(blank=True, db_column='НАО', max_length=1000, null=True)),
                ('otkaz_v_registracii_vipuska', models.CharField(blank=True, db_column='ОТКАЗ В РЕГИСТРАЦИИ ВЫПУСКА', max_length=1000, null=True)),
                ('osvobozhdeny_ot_raskrytiya', models.CharField(blank=True, db_column='ОСВОБОЖДЕНЫ ОТ РАСКРЫТИЯ', max_length=1000, null=True)),
                ('data_resheniya_ob_osvobozhdenii', models.CharField(blank=True, db_column='ДАТА РЕШЕНИЯ ОБ ОСВОБОЖДЕНИИ', max_length=1000, null=True)),
                ('nomer_resheniya_ob_osvobozhdenii', models.CharField(blank=True, db_column='НОМЕР РЕШЕНИЯ ОБ ОСВОБОЖДЕНИИ', max_length=1000, null=True)),
                ('otkaz_v_osvobozhdenii_ot_raskritiya', models.CharField(blank=True, db_column='ОТКАЗ В ОСВОБОЖДЕНИИ ОТ РАСКРЫТИЯ', max_length=1000, null=True)),
                ('data_otkaza_v_osvobozhdenii_ot_raskritiya', models.CharField(blank=True, db_column='ДАТА ОТКАЗА В ОСВОБОЖДЕНИИ ОТ РАСКРЫТИЯ', max_length=1000, null=True)),
                ('nomer_otkaza_v_osvobozhdenii_ot_raskritiya', models.CharField(blank=True, db_column='НОМЕР ОТКАЗА В ОСВОБОЖДЕНИИ ОТ РАСКРЫТИЯ', max_length=1000, null=True)),
                ('proverka_raskritiya', models.CharField(blank=True, db_column='ПРОВЕРКА РАСКРЫТИЯ', max_length=1000, null=True)),
                ('data_proverki', models.CharField(blank=True, db_column='ДАТА ПРОВЕРКИ', max_length=1000, null=True)),
                ('data_zaprosa_po_neraskritiyu_informacii', models.CharField(blank=True, db_column='ДАТА ЗАПРОСА ПО НЕ РАСКРЫТИЮ ИНФОРМАЦИИ', max_length=1000, null=True)),
                ('nomer_zaprosa_po_neraskritiyu_informacii', models.CharField(blank=True, db_column='НОМЕР ЗАПРОСА ПО НЕ РАСКРЫТИЮ ИНФОРМАЦИИ', max_length=1000, null=True)),
                ('data_predpisaniya_po_neraskritiyu_informacii', models.CharField(blank=True, db_column='ДАТА ПРЕДПИСАНИЯ ПО НЕ РАСКРЫТИЮ ИНФОРМАЦИИ', max_length=1000, null=True)),
                ('nomer_predpisaniya_po_neraskritiyu_informacii', models.CharField(blank=True, db_column='НОМЕР ПРЕДПИСАНИЯ ПО НЕ РАСКРЫТИЮ ИНФОРМАЦИИ', max_length=1000, null=True)),
                ('data_zaprosa_o_rezultatah_provedeniya_torgov_v_obchestve', models.CharField(blank=True, db_column='ДАТА ЗАПРОСА О РЕЗУЛЬТАТАХ ПРОВЕДЕНИЯ ТОРГОВ В ОБЩЕСТВЕ', max_length=1000, null=True)),
                ('nomer_zaprosa_o_rezultatah_provedeniya_torgov_v_obchestve', models.CharField(blank=True, db_column='НОМЕР ЗАПРОСА О РЕЗУЛЬТАТАХ ПРОВЕДЕНИЯ ТОРГОВ В ОБЩЕСТВЕ', max_length=1000, null=True)),
                ('data_otveta_na_zaprosa_o_rezultatah_provedeniya_torgov_v_obchestve', models.CharField(blank=True, db_column='ДАТА ОТВЕТА НА ЗАПРОСА О РЕЗУЛЬТАТАХ ПРОВЕДЕНИЯ ТОРГОВ В ОБЩЕСТВЕ', max_length=1000, null=True)),
                ('nomer_otveta_na_zaprosa_o_rezultatah_provedeniya_torgov_v_obchestve', models.CharField(blank=True, db_column='НОМЕР ОТВЕТА НА ЗАПРОСА О РЕЗУЛЬТАТАХ ПРОВЕДЕНИЯ ТОРГОВ В ОБЩЕСТВЕ', max_length=1000, null=True)),
                ('vivod', models.CharField(blank=True, db_column='ВЫВОД', max_length=1000, null=True)),
                ('raskritie', models.CharField(blank=True, db_column='РАСКРЫТИЕ', max_length=1000, null=True)),
                ('data_protokola', models.CharField(blank=True, db_column='ДАТА ПРОТОКОЛА', max_length=1000, null=True)),
                ('nomer_protokola', models.CharField(blank=True, db_column='НОМЕР ПРОТОКОЛА', max_length=1000, null=True)),
                ('statya_koap', models.CharField(blank=True, db_column='СТАТЬЯ КОАП', max_length=1000, null=True)),
                ('data_postanovleniya', models.CharField(blank=True, db_column='ДАТА ПОСТАНОВЛЕНИЯ', max_length=1000, null=True)),
                ('nomer_postanovleniya', models.CharField(blank=True, db_column='НОМЕР ПОСТАНОВЛЕНИЯ', max_length=1000, null=True)),
                ('resultat', models.CharField(blank=True, db_column='РЕЗУЛЬТАТ', max_length=1000, null=True)),
                ('razmer_shtrafa', models.CharField(blank=True, db_column='РАЗМЕР ШТРАФА', max_length=1000, null=True)),
                ('administrativka', models.CharField(blank=True, db_column='АДМИНИСТРАТИВКА', max_length=1000, null=True)),
                ('fns', models.CharField(blank=True, db_column='ФНС', max_length=1000, null=True)),
                ('data_pisma_v_fns', models.CharField(blank=True, db_column='ДАТА ПИСЬМА В ФНС', max_length=1000, null=True)),
                ('nomer_pisma_v_fns', models.CharField(blank=True, db_column='НОМЕР ПИСЬМА В ФНС', max_length=1000, null=True)),
                ('informaciya_o_poluchenii_otveta_ot_fns', models.CharField(blank=True, db_column='ИНФОРМАЦИЯ О ПОЛУЧЕНИИ ОТВЕТА ОТ ФНС', max_length=1000, null=True)),
                ('vh_nomer_otveta', models.CharField(blank=True, db_column='ВХ. НОМЕР ОТВЕТА', max_length=1000, null=True)),
                ('soderzhanie_otveta', models.CharField(blank=True, db_column='СОДЕРЖАНИЕ ОТВЕТА', max_length=1000, null=True)),
                ('otvet_fns_ob_adrese', models.CharField(blank=True, db_column='ОТВЕТ ФНС ОБ АДРЕСЕ', max_length=1000, null=True)),
                ('vzaimodeystvie_s_fns_na_ezhekvartalnoi_osnove', models.CharField(blank=True, db_column='ВЗАИМОДЕЙСТВИЕ С ФНС НА ЕЖЕКВАРТАЛЬНОЙ ОСНОВЕ', max_length=1000, null=True)),
                ('vzaimodeystvie_s_fns_na_ezhekvartalnoi_osnove_nomer_pisma', models.CharField(blank=True, db_column='ВЗАИМОДЕЙСТВИЕ С ФНС НА ЕЖЕКВАРТАЛЬНОЙ ОСНОВЕ (НОМЕР ПИСЬМА)', max_length=1000, null=True)),
                ('vzaimodeystvie_s_fns_na_ezhekvartalnoi_osnove_data_pisma', models.CharField(blank=True, db_column='ВЗАИМОДЕЙСТВИЕ С ФНС НА ЕЖЕКВАРТАЛЬНОЙ ОСНОВЕ (ДАТА ПИСЬМА)', max_length=1000, null=True)),
                ('svedeniya_ob_adrese_ne_dostoverny', models.CharField(blank=True, db_column='СВЕДЕНИЯ ОБ АДРЕСЕ НЕ ДОСТОВЕРНЫ', max_length=1000, null=True)),
                ('data_vneseniya_zapisi', models.CharField(blank=True, db_column='ДАТА ВНЕСЕНИЯ ЗАПИСИ', max_length=1000, null=True)),
                ('vzaimodeystvie_s_gos_organami', models.CharField(blank=True, db_column='ВЗАИМОДЕЙСТВИЕ С ГОС. ОРГАНАМИ', max_length=1000, null=True)),
            ],
            options={
                'db_table': 'Data111',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Data222',
            fields=[
                ('id', models.IntegerField(blank=True, primary_key=True, serialize=False, unique=True)),
                ('naimenovanie', models.CharField(blank=True, db_column='НАИМЕНОВАНИЕ', default=None, max_length=1000, null=True)),
                ('inn', models.CharField(blank=True, db_column='ИНН', default=None, max_length=10, null=True)),
                ('ogrn', models.CharField(blank=True, db_column='ОГРН', default=None, max_length=30, null=True)),
                ('data_registracii', models.TextField(blank=True, db_column='ДАТА РЕГИСТРАЦИИ', default=None, null=True)),
                ('opf', models.TextField(blank=True, db_column='ОПФ', default=None, null=True)),
                ('cod_emitenta', models.CharField(blank=True, db_column='КОД ЭМИТЕНТА', default=None, max_length=7, null=True)),
                ('ustavnoy_capital', models.TextField(blank=True, db_column='УСТАВНОЙ КАПИТАЛ', default=None, null=True)),
                ('kolichestvo_licevyh_schetov_v_reestre', models.TextField(blank=True, db_column='Количество лицевых счетов в реестре', default=None, null=True)),
                ('kolichestvo_nominalnyh_derzhateley_v_reestre', models.TextField(blank=True, db_column='Количество номинальных держателей в реестре', default=None, null=True)),
                ('cvedeniya_ob_otritii_scheta_nominalnogo_derzhatelya_centralnogo_depozitoria', models.TextField(blank=True, db_column='Сведения об открытии счета номинального держателя центрального депозитария', default=None, null=True)),
                ('region', models.TextField(blank=True, db_column='РЕГИОН', default=None, null=True)),
                ('adres', models.TextField(blank=True, db_column='АДРЕС', default=None, null=True)),
                ('edinolichny_ispolnitelny_organ', models.TextField(blank=True, db_column='ЕДИНОЛИЧНЫЙ ИСПОЛНИТЕЛЬНЫЙ ОРГАН', default=None, null=True)),
                ('contactny_dannye', models.TextField(blank=True, db_column='КОНТАКТНЫЕ ДАННЫЕ', default=None, null=True)),
                ('status', models.TextField(blank=True, db_column='СТАТУС', default=None, null=True)),
                ('dvizhenie_denezhnyh_sredstv', models.TextField(blank=True, db_column='ДВИЖЕНИЕ ДЕНЕЖНЫХ СРЕДСТВ', default=None, null=True)),
                ('otchetnost', models.TextField(blank=True, db_column='ОТЧЕТНОСТЬ', default=None, null=True)),
                ('zadolzhennost_pered_fns', models.TextField(blank=True, db_column='ЗАДОЛЖЕННОСТЬ ПЕРЕД ФНС', default=None, null=True)),
                ('kartochka_kompanii', models.TextField(blank=True, db_column='КАРТОЧКА КОМПАНИИ', default=None, null=True)),
                ('registrator', models.TextField(blank=True, db_column='РЕГИСТРАТОР', null=True)),
                ('data_pisma_po_reestru', models.TextField(blank=True, db_column='ДАТА ПИСЬМА ПО РЕЕСТРУ', null=True)),
                ('nomer_pisma_po_reestru', models.TextField(blank=True, db_column='НОМЕР ПИСЬМА ПО РЕЕСТРУ', null=True)),
                ('data_zaprosa_po_reestru', models.TextField(blank=True, db_column='ДАТА ЗАПРОСА ПО РЕЕСТРУ', null=True)),
                ('nomer_zaprosa_po_reestru', models.TextField(blank=True, db_column='НОМЕР ЗАПРОСА ПО РЕЕСТРУ', null=True)),
                ('data_predpisanya_po_reestru', models.TextField(blank=True, db_column='ДАТА ПРЕДПИСАНИЯ ПО РЕЕСТРУ', null=True)),
                ('nomer_predpisaniya_po_reestru', models.TextField(blank=True, db_column='НОМЕР ПРЕДПИСАНИЯ ПО РЕЕСТРУ', null=True)),
                ('data_provedeniya_gosa', models.TextField(blank=True, db_column='ДАТА ПРОВЕДЕНИЯ ГОСА', null=True)),
                ('data_zaprosa_po_gosa', models.TextField(blank=True, db_column='ДАТА ЗАПРОСА ПО ГОСА', null=True)),
                ('nomer_zaprosa_po_gosa', models.TextField(blank=True, db_column='НОМЕР ЗАПРОСА ПО ГОСА', null=True)),
                ('data_predpisaniya_po_1_vypusku', models.TextField(blank=True, db_column='ДАТА ПРЕДПИСАНИЯ ПО 1 ВЫПУСКУ', null=True)),
                ('nomer_predpisaniya_po_1_vypusku', models.TextField(blank=True, db_column='НОМЕР ПРЕДПИСАНИЯ ПО 1 ВЫПУСКУ', null=True)),
                ('nrd', models.TextField(blank=True, db_column='НРД', null=True)),
                ('oao_na_22_06_2015', models.TextField(blank=True, db_column='ОАО на 22.06.2015', null=True)),
                ('korp_kontrol', models.TextField(blank=True, db_column='КОРП КОНТРОЛЬ', null=True)),
                ('pao_v_silu_priznakov', models.TextField(blank=True, db_column='ПАО В СИЛУ ПРИЗНАКОВ', null=True)),
                ('pao_v_silu_nazvaniya', models.TextField(blank=True, db_column='ПАО В СИЛУ НАЗВАНИЯ', null=True)),
                ('nao_obyazannoe_raskryvat_informaciyu_v_sootvetstvii_so_st_30_fz_o_pcb', models.TextField(blank=True, db_column='НАО ОБЯЗАННОЕ РАСКРЫВАТЬ ИНФОРМАЦИЮ В СООТВЕТСТВИИ СО СТ.30 ФЗ О РЦБ', null=True)),
                ('nao_osuchestvivshee_osuchestvlyayuschee_publichnoe_razmechenie_obligaciy_ili_inyh_cennyh_bumag', models.TextField(blank=True, db_column='НАО ОСУЩЕСТВИВШЕЕ (ОСУЩЕСТВЛЯЮЩЕЕ) ПУБЛИЧНОЕ РАЗМЕЩЕНИЕ ОБЛИГАЦИЙ ИЛИ ИНЫХ ЦЕННЫХ БУМАГ ', null=True)),
                ('nao', models.TextField(blank=True, db_column='НАО', null=True)),
                ('osvobozhdeny_ot_raskrytiya', models.TextField(blank=True, db_column='ОСВОБОЖДЕНЫ ОТ РАСКРЫТИЯ', null=True)),
                ('data_resheniya_ob_osvobozhdenii', models.TextField(blank=True, db_column='ДАТА РЕШЕНИЯ ОБ ОСВОБОЖДЕНИИ', null=True)),
                ('nomer_resheniya_ob_osvobozhdenii', models.TextField(blank=True, db_column='НОМЕР РЕШЕНИЯ ОБ ОСВОБОЖДЕНИИ', null=True)),
                ('otkaz_v_osvobozhdenii_ot_raskritiya', models.TextField(blank=True, db_column='ОТКАЗ В ОСВОБОЖДЕНИИ ОТ РАСКРЫТИЯ', null=True)),
                ('data_otkaza_v_osvobozhdenii_ot_raskritiya', models.TextField(blank=True, db_column='ДАТА ОТКАЗА В ОСВОБОЖДЕНИИ ОТ РАСКРЫТИЯ', null=True)),
                ('nomer_otkaza_v_osvobozhdenii_ot_raskritiya', models.TextField(blank=True, db_column='НОМЕР ОТКАЗА В ОСВОБОЖДЕНИИ ОТ РАСКРЫТИЯ', null=True)),
                ('proverka_raskritiya', models.TextField(blank=True, db_column='ПРОВЕРКА РАСКРЫТИЯ', null=True)),
                ('data_proverki', models.TextField(blank=True, db_column='ДАТА ПРОВЕРКИ', null=True)),
                ('data_zaprosa_po_neraskritiyu_informacii', models.TextField(blank=True, db_column='ДАТА ЗАПРОСА ПО НЕРАСКРЫТИЮ ИНФОРМАЦИИ', null=True)),
                ('nomer_zaprosa_po_neraskritiyu_informacii', models.TextField(blank=True, db_column='НОМЕР ЗАПРОСА ПО НЕРАСКРЫТИЮ ИНФОРМАЦИИ', null=True)),
                ('data_predpisaniya_po_neraskritiyu_informacii', models.TextField(blank=True, db_column='ДАТА ПРЕДПИСАНИЯ ПО НЕРАСКРЫТИЮ ИНФОРМАЦИИ', null=True)),
                ('nomer_predpisaniya_po_neraskritiyu_informacii', models.TextField(blank=True, db_column='НОМЕР ПРЕДПИСАНИЯ ПО НЕРАСКРЫТИЮ ИНФОРМАЦИИ', null=True)),
                ('data_zaprosa_o_rezultatah_provedeniya_torgov_v_obchestve', models.TextField(blank=True, db_column='ДАТА ЗАПРОСА ОРЕЗУЛЬТАТАХ ПРОВЕДЕНИЯ ТОРГОВ В ОБЩЕСТВЕ', null=True)),
                ('nomer_zaprosa_o_rezultatah_provedeniya_torgov_v_obchestve', models.TextField(blank=True, db_column='НОМЕР ЗАПРОСА О РЕЗУЛЬТАТАХ ПРОВЕДЕНИЯ ТОРГОВ В ОБЩЕСТВЕ', null=True)),
                ('data_otveta_na_zaprosa_o_rezultatah_provedeniya_torgov_v_obchestve', models.TextField(blank=True, db_column='ДАТА ОТВЕТА НА ЗАПРОСА О РЕЗУЛЬТАТАХ ПРОВЕДЕНИЯ ТОРГОВ В ОБЩЕСТВЕ', null=True)),
                ('nomer_otveta_na_zaprosa_o_rezultatah_provedeniya_torgov_v_obchestve', models.TextField(blank=True, db_column='НОМЕР ОТВЕТА НА ЗАПРОСА О РЕЗУЛЬТАТАХ ПРОВЕДЕНИЯ ТОРГОВ В ОБЩЕСТВЕ', null=True)),
                ('vivod', models.TextField(blank=True, db_column='ВЫВОД', null=True)),
                ('raskritie', models.TextField(blank=True, db_column='РАСКРЫТИЕ', null=True)),
                ('data_protokola', models.TextField(blank=True, db_column='ДАТА ПРОТОКОЛА', null=True)),
                ('nomer_protokola', models.TextField(blank=True, db_column='НОМЕР ПРОТОКОЛА', null=True)),
                ('statya_koap', models.TextField(blank=True, db_column='СТАТЬЯ КОАП', null=True)),
                ('data_postanovleniya', models.TextField(blank=True, db_column='ДАТА ПОСТАНОВЛЕНИЯ', null=True)),
                ('nomer_postanovleniya', models.TextField(blank=True, db_column='НОМЕР ПОСТАНОВЛЕНИЯ', null=True)),
                ('resultat', models.TextField(blank=True, db_column='РЕЗУЛЬТАТ', null=True)),
                ('razmer_shtrafa', models.TextField(blank=True, db_column='РАЗМЕР ШТРАФА', null=True)),
                ('administrativka', models.TextField(blank=True, db_column='АДМИНИСТРАТИВКА', null=True)),
                ('fns', models.TextField(blank=True, db_column='ФНС', null=True)),
                ('data_pisma_v_fns', models.TextField(blank=True, db_column='ДАТА ПИСЬМА В ФНС', null=True)),
                ('nomer_pisma_v_fns', models.TextField(blank=True, db_column='НОМЕР ПИСЬМА В ФНС', null=True)),
                ('informaciya_o_poluchenii_otveta_ot_fns', models.TextField(blank=True, db_column='ИНФОРМАЦИЯ О ПОЛУЧЕНИИ ОТВЕТА ОТ ФНС', null=True)),
                ('vh_nomer_otveta', models.TextField(blank=True, db_column='ВХ. НОМЕР ОТВЕТА', null=True)),
                ('svedeniya_ob_adrese_ne_dostoverny', models.TextField(blank=True, db_column='СВЕДЕНИЯ ОБ АДРЕСЕ НЕ ДОСТОВЕРНЫ', null=True)),
                ('data_vneseniya_zapisi', models.TextField(blank=True, db_column='ДАТА ВНЕСЕНИЯ ЗАПИСИ', null=True)),
                ('vzaimodeystvie_s_gos_organami', models.TextField(blank=True, db_column='ВЗАИМОДЕЙСТВИЕ С ГОС. ОРГАНАМИ', null=True)),
                ('vozvrat', models.BooleanField()),
            ],
            options={
                'db_table': 'Data222',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
                ('action_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
    ]
